% This script helps you convert the model file generated by Matlab,
% which is a .m structure file, into a plain text format file.
% Then you can apply the it to binary (or Android) version.
%
%
% Yuan-Ching Teng
% Latest updated July 5, 2014
clear;
clc;

fileAndroid = './modelAndroid';
fileMatlab  = './modelMatlab.m';

svmTypeStr = {'c_svc', 'nu_svc', 'one_class', 'epsilon_svr', 'nu_svr'};
kernelTypeStr = {'linear', 'polynomial', 'rbf', 'sigmoid', 'precomputed'};
% load the structure and rename it as 'model'
tmp = load(fileMatlab);
fieldNames = fieldnames(tmp);
model = getfield(tmp, fieldNames{1});

fout = fopen(fileAndroid, 'wb');
idxSVM    = model.Parameters(1) + 1;
idxKernel = model.Parameters(2) + 1;
degree    = model.Parameters(3);
gamma     = model.Parameters(4);
coef0     = model.Parameters(5);

fprintf(fout, 'svm_type %s\n', svmTypeStr{idxSVM});
fprintf(fout, 'kernel_type %s\n', kernelTypeStr{idxKernel});
if (idxKernel ~=1), fprintf(fout, 'gamma %g\n', gamma);end
fprintf(fout, 'nr_class %d\n', model.nr_class);
fprintf(fout, 'total_sv %d\n', model.totalSV);

% rho maybe is list 
fprintf(fout, 'rho ');
for i = 1:length(model.rho)
    fprintf(fout, '%g ', model.rho(i));
end
fprintf(fout, '\n');
fprintf(fout, 'label ');
%label_list = model.Label;
for label = model.Label;
    fprintf(fout, '%d ', label);
end
fprintf(fout, '\n');

if isfield(model, 'probA')
    %probA & probB
    fprintf(fout, 'probA %g\n', model.ProbA);
    fprintf(fout, 'probB %g\n', model.ProbB);
end
%% nr_sv
fprintf(fout, 'nr_sv ');
nSV_list = model.nSV;
for nSV = model.nSV
    fprintf(fout, '%d ', nSV);
end
fprintf(fout, '\n');


%%SV (sv_coef + SVs)
fprintf(fout, 'SV\n');
SVs = full(model.SVs);
for i = 1:model.totalSV
    %sv_coef (length = nClass - 1)
    if i < model.nr_class
        sv_coefList = model.sv_coef(i, :);
        for sv_coef = sv_coefList
            fprintf(fout, '%g ', sv_coef);
        end
    end
    % SV
    SV = SVs(i,:);
    for idxItem = 1:length(SV)
        item = SV(idxItem);
        if(item ~= 0)
            fprintf(fout, '%d:%g ', idxItem, item);
        end
    end
    fprintf(fout, '\n');
end
fclose(fout);
